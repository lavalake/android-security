http://www.phpxs.com/post/5811/
1. 异步请求线程池
该线程池名 OkHttp Dispatcher ，该线程用于执行异步的请求任务。
该线程池本身: 无任务上限，自动回收闲置60s的线程
但是 Dispatcher 中在进口进行把关控制，默认情况下保证在当前进程中 OkHttpClient 最多只有64个请求，池子中相同host的请求不超过5个
架构上通过两个双端队列( readyAsyncCalls:Deque<AsyncCall> 与 runningAsyncCals:Dequeue<AsyncCall> )分别用于维护等待中的任务与运行中的任务
在每一个异步任务后，都会检查一遍 readyAsyncCalls ，在满足条件下，将最先进入队列的任务丢入该线程池进行执行

2. 连接池清理线程池
该线程池名 OkHttp ConnectionPool ，该线程用于自动清理长时间闲置或泄漏的连接。
该线程本身: 无任务上限，自动回收闲置60s的线程
但是 ConnectionPool 中通过一个 cleanupRunning 的标记，控制当前仅有一个清理任务进入队列
清理任务，会不断清理，在所有需要清理的连接都清理完成后，会计算出最近一次需要清理的时间并阻塞，不断清理直到连接池中没有任何连接，方才结束

3. 缓存整理线程池
该线程池名 OkHttp DiskLruCache ，该线程池用于整理本地请求结果的缓存。
该线程池本身: 最多1个运行中线程，其余任务会阻塞住等待，回收闲置60s的线程
由于可运行仅为一个线程，因此所有操作无需考虑线程安全问题
缓存的整理包含: 达到阀值大小的文件，删除最近最少使用的记录；在有关操作达到一定数量以后对记录进行重建
