1. preformance
  a. array
  b. cache
  c. object
2. JNIEnv
  The JNI specification states that each JNIEnv is local to a thread.A JVM can rely on this assumption, 
  storing additional thread-local information within the JNIEnv. 
  use JavaVM to get JNIEnv
3. exception
4. Correctness Tip #5
Ensure the code does not make any JNI calls or block for any reason between calls to GetXXXCritical() and ReleaseXXXCritical().
5. Using global references incorrectly
6. Validating new code against the JNI specification
  Validate that a JNIEnv is used only with the thread to which it is associated.
  Validate that JNI Methods are not called within GetXXXCritical()'s ReleaseXXXCritical() section.
  For a method that enters a critical section, validate that the method does not return before it is released.
  Validate that there is a check for an exception after all JNI calls that can raise an exception.
  Ensure that all Get/Release calls are matched within each JNI method.
7. Analyzing the method trace
8. local reference overflow
9. JNI deadlock
10. JavaVM and JNIEnv
  JNI defines two key data structures, "JavaVM" and "JNIEnv". Both of these are essentially pointers to pointers to function
  tables
  The JNIEnv provides most of the JNI functions. Your native functions all receive a JNIEnv as the first argument
  The JNIEnv is used for thread-local storage. For this reason, you cannot share a JNIEnv between threads. If 
  a piece of code has no other way to get its JNIEnv, you should share the JavaVM, and use GetEnv to discover
  the thread's JNIEnv
11. Threads
  All threads are Linux threads, scheduled by the kernel.but they can also be created elsewhere and then attached to the JavaVM
  Attaching a natively-created thread causes a java.lang.Thread object to be constructed and added to the "main" ThreadGroup,
  making it visible to the debugger.
  *****************
  Android does not suspend threads executing native code?
12. statci vs non-static
13. registerNativeMethods
  Jni_onload
  
14. calling back for parameters
  pass fields of object or whole object to JNI native. 
